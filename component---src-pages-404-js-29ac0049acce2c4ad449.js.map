{"version":3,"file":"component---src-pages-404-js-29ac0049acce2c4ad449.js","mappings":"wLAMMA,G,gBANmB,sCAAIC,EAAJ,yBAAIA,EAAJ,uBACvBA,EACGC,SAAQ,SAACC,GAAD,OAASC,MAAMC,QAAQF,GAAMA,EAAK,CAACA,MAC3CG,QAAO,SAACH,GAAD,OAAQA,KACfI,KAAK,OAIV,I,oBC2DMC,EAAS,kBACb,0BACEC,WAAWT,EAAAA,EAAAA,GACT,CAAC,OAAQ,WAAY,OAAQ,OAAQ,WACrC,CAAC,mBAAoB,mBAAoB,eAAgB,iBAG3D,gBAACU,EAAA,GAAD,iBACY,IACV,gBAACA,EAAA,GAAD,CAAcC,IAAI,6BAAlB,UAFF,IAEuE,IACrE,gBAACD,EAAA,GAAD,CAAcC,IAAI,4BAAlB,gBAAyE,IAH3E,MAIM,IACJ,gBAACD,EAAA,GAAD,CAAcC,IAAI,iCAAlB,WACA,gBAACD,EAAA,GAAD,MACA,gBAACA,EAAA,GAAD,CAAcC,IAAI,mDAAlB,cAON,EApFa,SAAC,GAAD,IACXC,EADW,EACXA,aACAC,EAFW,EAEXA,SACAC,EAHW,EAGXA,UACAL,EAJW,EAIXA,UAJW,OAWX,uBACEA,WAAWT,EAAAA,EAAAA,GACT,CAAC,SAAU,gBACX,CAAC,cAAe,gBAChB,CAAC,OAAQ,WAAY,kBAAmB,SAAU,eAGpD,wBACES,WAAWT,EAAAA,EAAAA,GACT,CAAC,QACD,CACE,OACA,WACA,eACA,iBACA,QACA,eAIJ,6BAAQc,GAAgBA,EAAP,MAAjB,uBACA,uBACEL,WAAWT,EAAAA,EAAAA,GACT,CAAC,SAAU,gBACX,CAAC,OAAQ,YACT,CACE,OACA,WACA,eACA,iBACA,QACA,eAIHY,GAEH,uBACEH,WAAWT,EAAAA,EAAAA,GACT,CAAC,SAAU,YAAa,OAAQ,YAChC,CAAC,OAAQ,WAAY,YAAa,kBAClC,CAAC,kBAAmB,QAAS,aAC7BS,IAGDI,IAGL,gBAACL,EAAD,QCzDER,EANmB,sCAAIC,EAAJ,yBAAIA,EAAJ,uBACvBA,EACGC,SAAQ,SAACC,GAAD,OAASC,MAAMC,QAAQF,GAAMA,EAAK,CAACA,MAC3CG,QAAO,SAACH,GAAD,OAAQA,KACfI,KAAK,MAIV,ICGaQ,EAAO,SAAC,GAAD,IAAGF,EAAH,EAAGA,SAAH,OAClB,qBACEJ,UAAWT,EACT,CAAC,YAAa,aAAc,cAC5B,CAAC,YAAa,gBAGfa,IAgBQG,EAAW,SAAC,GAAD,IACtBH,EADsB,EACtBA,SACAJ,EAFsB,EAEtBA,UAFsB,OAOtB,sBACEA,UAAWT,EACT,CAAC,WAAY,cAAe,eAC5B,cACAS,IAGDI,IClBL,EAvBqB,WACnB,OACE,gBAAC,EAAD,CACEC,UAAU,mBACVF,aAAc,gBAACI,EAAD,0BAEd,uBACEP,UAAWT,EACT,CAAC,YAAa,YAAa,iBAC3B,CAAC,OAAQ,WAAY,QAAS,YAE9B,gBAGF,gBAACe,EAAD,kCACA,gBAACA,EAAD,KACE,gBAACL,EAAA,GAAD,CAAcC,IAAI,KAAlB","sources":["webpack://sebgrohn.github.io/./src/common/classnames.ts","webpack://sebgrohn.github.io/./src/common/Page.tsx","webpack://sebgrohn.github.io/./src/Common/classNames.ts","webpack://sebgrohn.github.io/./src/Common/Text.tsx","webpack://sebgrohn.github.io/./src/pages/404.js"],"sourcesContent":["const concatClassNames = (...classNames: (string | string[])[]) =>\r\n  classNames\r\n    .flatMap((cn) => (Array.isArray(cn) ? cn : [cn]))\r\n    .filter((cn) => cn)\r\n    .join(\" \");\r\n\r\nconst c = concatClassNames;\r\n\r\nexport default c;\r\n","import React, { ReactNode } from \"react\";\r\nimport c from \"./classNames\";\r\nimport Colophon, { ColophonDivider, ColophonLink } from \"./Colophon\";\r\n\r\nconst Page = ({\r\n  titleContent,\r\n  children,\r\n  pageTitle,\r\n  className,\r\n}: {\r\n  titleContent: ReactNode;\r\n  children: ReactNode;\r\n  pageTitle?: string;\r\n  className?: string;\r\n}) => (\r\n  <div\r\n    className={c(\r\n      [\"w-full\", \"min-h-screen\"],\r\n      [\"bg-teal-975\", \"text-teal-50\"],\r\n      [\"flex\", \"flex-col\", \"justify-between\", \"gap-16\", \"md:gap-32\"]\r\n    )}\r\n  >\r\n    <main\r\n      className={c(\r\n        [\"grow\"],\r\n        [\r\n          \"flex\",\r\n          \"flex-col\",\r\n          \"items-center\",\r\n          \"justify-evenly\",\r\n          \"gap-8\",\r\n          \"md:gap-16\",\r\n        ]\r\n      )}\r\n    >\r\n      <title>{pageTitle && `${pageTitle} â€“ `}ðŸŒ¿ FehrnstrÃ¶m-GrÃ¶hn</title>\r\n      <div\r\n        className={c(\r\n          [\"w-full\", \"min-h-[50vh]\"],\r\n          [\"px-8\", \"md:px-16\"],\r\n          [\r\n            \"flex\",\r\n            \"flex-col\",\r\n            \"items-center\",\r\n            \"justify-center\",\r\n            \"gap-8\",\r\n            \"md:gap-16\",\r\n          ]\r\n        )}\r\n      >\r\n        {titleContent}\r\n      </div>\r\n      <div\r\n        className={c(\r\n          [\"w-full\", \"max-w-7xl\", \"px-8\", \"md:px-16\"],\r\n          [\"flex\", \"flex-row\", \"flex-wrap\", \"md:flex-nowrap\"],\r\n          [\"justify-between\", \"gap-8\", \"md:gap-16\"],\r\n          className\r\n        )}\r\n      >\r\n        {children}\r\n      </div>\r\n    </main>\r\n    <Footer />\r\n  </div>\r\n);\r\n\r\nconst Footer = () => (\r\n  <footer\r\n    className={c(\r\n      [\"px-8\", \"md:px-16\", \"pt-8\", \"pb-4\", \"md:py-8\"],\r\n      [\"bg-gradient-to-b\", \"from-transparent\", \"via-teal-990\", \"to-teal-990\"]\r\n    )}\r\n  >\r\n    <Colophon>\r\n      Byggt med{\" \"}\r\n      <ColophonLink uri=\"https://www.gatsbyjs.org/\">Gatsby</ColophonLink>,{\" \"}\r\n      <ColophonLink uri=\"https://tailwindcss.com/\">Tailwind CSS</ColophonLink>{\" \"}\r\n      och{\" \"}\r\n      <ColophonLink uri=\"https://iconscout.com/unicons\">Unicons</ColophonLink>\r\n      <ColophonDivider />\r\n      <ColophonLink uri=\"https://github.com/sebgrohn/fehrnstrom-grohn.se\">\r\n        KÃ¤llkod\r\n      </ColophonLink>\r\n    </Colophon>\r\n  </footer>\r\n);\r\n\r\nexport default Page;\r\n","const concatClassNames = (...classNames: (string | string[])[]) =>\r\n  classNames\r\n    .flatMap((cn) => (Array.isArray(cn) ? cn : [cn]))\r\n    .filter((cn) => cn)\r\n    .join(\" \");\r\n\r\nconst c = concatClassNames;\r\n\r\nexport default c;\r\n","import React, { ReactNode } from \"react\";\r\nimport c from \"./classNames\";\r\n\r\nexport const InlineBlockSpan = ({\r\n  children,\r\n  className,\r\n}: {\r\n  children: ReactNode;\r\n  className?: string;\r\n}) => <span className={c(\"inline-block\", className)}>{children}</span>;\r\n\r\nexport const Para = ({ children }: { children: ReactNode }) => (\r\n  <p\r\n    className={c(\r\n      [\"text-base\", \"md:text-lg\", \"lg:text-xl\"],\r\n      [\"font-sans\", \"font-light\"]\r\n    )}\r\n  >\r\n    {children}\r\n  </p>\r\n);\r\n\r\nexport const Emph = ({ children }: { children: ReactNode }) => (\r\n  <span\r\n    className={c(\r\n      \"font-medium\",\r\n      [\"bg-clip-text\", \"text-transparent\"],\r\n      [\"bg-gradient-to-br\", \"from-teal-300\", \"to-blue-400\"]\r\n    )}\r\n  >\r\n    {children}\r\n  </span>\r\n);\r\n\r\nexport const Heading1 = ({\r\n  children,\r\n  className,\r\n}: {\r\n  children: ReactNode;\r\n  className?: string;\r\n}) => (\r\n  <h2\r\n    className={c(\r\n      [\"text-5xl\", \"md:text-6xl\", \"lg:text-7xl\"],\r\n      \"font-poiret\",\r\n      className\r\n    )}\r\n  >\r\n    {children}\r\n  </h2>\r\n);\r\n\r\nexport const Heading2 = ({ children }: { children: ReactNode }) => (\r\n  <h2 className={c([\"text-2xl\", \"md:text-3xl\", \"lg:text-4xl\"], \"font-poiret\")}>\r\n    {children}\r\n  </h2>\r\n);\r\n","// import { Link } from \"gatsby\";\r\nimport React from \"react\";\r\nimport c from \"../common/classnames\";\r\nimport { ColophonLink } from \"../common/Colophon\";\r\nimport Page from \"../common/Page\";\r\nimport { Heading1, Para } from \"../Common/Text\";\r\n\r\nconst NotFoundPage = () => {\r\n  return (\r\n    <Page\r\n      pageTitle=\"Sidan finns inte\"\r\n      titleContent={<Heading1>Sidan finns inte</Heading1>}\r\n    >\r\n      <div\r\n        className={c(\r\n          [\"flex-auto\", \"basis-2/5\", \"md:basis-full\"],\r\n          [\"flex\", \"flex-col\", \"gap-4\", \"md:gap-8\"],\r\n          // [couldWrap ? \"order-last\" : \"order-none\", \"md:order-none\"],\r\n          \"text-center\"\r\n        )}\r\n      >\r\n        <Para>Den hÃ¤r sidan finns inte.</Para>\r\n        <Para>\r\n          <ColophonLink uri=\"/\">GÃ¥ tillbaka till startsidan</ColophonLink>\r\n        </Para>\r\n      </div>\r\n    </Page>\r\n  );\r\n};\r\n\r\nexport default NotFoundPage;\r\n"],"names":["c","classNames","flatMap","cn","Array","isArray","filter","join","Footer","className","Colophon","uri","titleContent","children","pageTitle","Para","Heading1"],"sourceRoot":""}